1 . GENERAL DESCRIPTION 1 . 1 . Purpose of the Document This document defines the ATP software requirements assigned from the onboard train control subsystem of the CASCO's intelligent train control The ATP software described in this document is not only including the software running on the VLE- 2 board deployed This document is the specification for the ATP software designers , and is the reference for safety analysts , valuators 1 . 2 . Field of Application This document is part of iTC R&D , and it concerns the Carborne Controller , which is an onboard ATC 1 . 3 . Identification of the Last Requirement Defined The last requirement defined is the ATP-SwRS- 0 8 0 4 , and the numeration must restart from ATP-SwRS- 0 2 . SYSTEM CONTEXT 2 . 1 . Purpose The ATP software is the core component of the Carborne Controller , playing the important role for guaranteeing the safety using hardware board resources to realize the period time control , and the 2 oo 2 data comparison ; access external systems or data from other subsystems within the CC ; through from the rolling stock and internal or external systems data to determine the state of ATP , the EOA according to the odometer and trackside beacon message , calculating the train's kinematics and localizing the train on the map monitoring train speed , location and energy to avoid the train to exceed the environmental restricted , and ensuring the according to the platform information , enabling to operate the train door and PSD ; generating vital reports and commands to external systems and the rolling stock . 2 . 2 . Assumptions ATP software developers should be aware of the basic principles of urban rail transit signaling system , familiar with carborne The vital part of ATP software applies " Vital Coded Processor " technique , which can convert the raw ATP The onboard ATP software running on CASCO's new 2 × 2 oo 2 vital computation platform . The hardware platform 2 . 3 . Application and Reference Documents 2 . 4 . Abbreviations and Defines Reference to [ APP 1 ] for abbreviations and defines . 2 . 5 . Conventions The organization of ATP software development shall follow the process of SIL 4 system defined in EN 5 0 1 The conventions of ARDL used for describing software requirements are shown as following : Use indentation to express hierarchy structure ; Use ( k ) after each variable to represent the value in the current cycle , and ( k- 1 Use " and " , " or " , " not " for logic operation ; Use brackets to represent arrays ; Use uppercase to represent system constants . The description of common functions used in ARDL are shown as Table 2 3 . 3 . GENERAL CONSTRAINTS 3 . 1 . User Characteristics N / A 3 . 2 . Safety Requirements [ iTC_CC_ATP-SwRS- 0 0 0 1 ] Refer to 6 . 7 , the onboard ATP software shall be SIL 4 according to the CENELEC standard [ 3 . 3 . Production Constraints [ iTC_CC_ATP-SwRS- 0 0 0 3 ] ATP software shall use parameters come from iTC system data preparation for different project's deployment . For each project , [ iTC_CC_ATP-SwRS- 0 0 0 4 ] For sub-system design constraints , it is not possible to establish more than two channel of communication with PSD platform [ iTC_CC_ATP-SwRS- 0 0 0 5 ] For interface design constraints , ATP shall use FSFB 2 safety protocol with PSD platform managers with respect with safety [ iTC_CC_ATP-SwRS- 0 5 5 0 ] During the operation , the onboard ATP shall not response any request or command from the VLE- 2 debugging Ethernet [ iTC_CC_ATP-SwRS- 0 4 9 8 ] The codes of the onboard ATP shall follow the [ REF 1 5 ] rules of the VCP . NOTES : For each vital variable encoded by the VCP tool , its higher 3 2 bits are raw data , and [ iTC_CC_ATP-SwRS- 0 4 9 9 ] For VCP constraints , the onboard ATP importing data from non-vital devices shall encode firstly . The data of project [ iTC_CC_ATP-SwRS- 0 5 0 0 ] Each set of onboard ATP shall have two parts of programs , which compose two out of two structures . [ iTC_CC_ATP-SwRS- 0 5 0 1 ] The onboard ATP shall work on the VxWorks 5 . 5 operating system . [ iTC_CC_ATP-SwRS- 0 7 6 0 ] iCODER-VCP 1 and iCODER-VCP 2 shall be installed in two different computer . The two redundant codes generated by independent [ iTC_CC_ATP-SwRS- 0 7 6 1 ] The number of global variables that need to be redundant coded in the ATP source code cannot be more than [ iTC_CC_ATP-SwRS- 0 7 6 2 ] The redundant code generation function can generate redundant code for functions which satisfies the following constrains of calling order : [ iTC_CC_ATP-SwRS- 0 7 6 3 ] The following four annotations of key words are supported : The function definition which noted by comment key word / * KWNOPARMF * / , means that the function call The function must be defined before it is firstly be called , otherwise , give an error message when redundant The function cannot have parameters . Otherwise , give an error message . Return statement cannot be used in this function . Otherwise , give an error message . Local variables cannot be used in this function . Otherwise , give an error message . The use restrictions for comment keyword / * KWADJMF * / are as following . The module function which be noted must satisfy the restrictions of module function . Otherwise , give an error message The module function which be noted by keyword / * KWADJMF * / must be coded separately . Otherwise , / * KWADJMF * / can only be used to note module function call . And when coding this module The total number of signatures which used in the module function noted by keyword / * KWADJMF * / cannot This module function cannot use array . Otherwise , give an error message . This module function can only use once in the coding files . Otherwise , give an error message . These fields annotated by keyword are only valid when we first encounter the keyword name , and become invalid when [ iTC_CC_ATP-SwRS- 0 7 6 4 ] For the system which using iCODER- 1 0 0 to achieve SIL requirement , the signature of the output shall [ iTC_CC_ATP-SwRS- 0 7 6 5 ] Header file’s nesting cannot exceed 1 0 layers . [ iTC_CC_ATP-SwRS- 0 7 6 6 ] The minimal configuration of the hardware that the software needs : 3 . 5 . Quality Requirements N / A 3 . 6 . Performance [ iTC_CC_ATP-SwRS- 0 0 0 8 ] Vital inputs of ATP embedded software shall be acquired every ATP_CYCLE_TIME . Once vital inputs acquired , ATP embedded software shall refresh its outputs in less than two ATP_CYCLE_TIME , and send [ iTC_CC_ATP-SwRS- 0 5 7 5 ] The set-up of the ATP software shall not exceed C_TTIS minutes . [ iTC_CC_ATP-SwRS- 0 0 0 9 ] From power-up and if conditions on inputs allow to reach a higher level of train availability ( that is to 4 . INTERFACE SPECIFICATIONS 4 . 1 . List of Interface 4 . 1 . 1 . External interface 